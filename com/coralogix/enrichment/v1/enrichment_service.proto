syntax = "proto3";

import "google/protobuf/wrappers.proto";
import "com/coralogix/enrichment/v1/enrichment.proto";
import "com/coralogix/enrichment/v1/enrichment_request_model.proto";
import "com/coralogix/enrichment/v1/audit_log.proto";

package com.coralogix.enrichment.v1;

message GetEnrichmentLimitRequest {}

message GetEnrichmentLimitResponse {
  uint32 limit = 1;
  uint32 used = 2;
}

message GetEnrichmentsRequest {}

message GetEnrichmentsResponse {
  repeated Enrichment enrichments = 1;
}

message AddEnrichmentsRequest {
  repeated EnrichmentRequestModel request_enrichments = 1;
}

message AddEnrichmentsResponse {
  repeated Enrichment enrichments = 1;
}

message RemoveEnrichmentsRequest {
  repeated google.protobuf.UInt32Value enrichment_ids = 1;
}

message RemoveEnrichmentsResponse {
  repeated Enrichment remaining_enrichments = 1;
}

message CreateEnrichmentRequest {
  Enrichment enrichment = 1;
}

message ReplaceEnrichmentRequest {
  Enrichment enrichment = 1;
}

message DeleteEnrichmentRequest {
  google.protobuf.UInt32Value enrichment_id = 1;
}

message CreateEnrichmentResponse {}

message DeleteEnrichmentResponse {}

message EnrichmentExecutionRequest {
  oneof request {
    CreateEnrichmentRequest create = 1;
    DeleteEnrichmentRequest delete = 2;
  }
}

message EnrichmentExecutionResponse {
  oneof response {
      CreateEnrichmentResponse create = 1;
      DeleteEnrichmentResponse delete = 2;
    }
}

message AtomicBatchExecuteEnrichmentRequest {
  repeated EnrichmentExecutionRequest requests = 1;
}

message AtomicBatchExecuteEnrichmentResponse {
  repeated EnrichmentExecutionResponse matching_responses = 1;
}

service EnrichmentService {
  rpc GetEnrichments(GetEnrichmentsRequest) returns (GetEnrichmentsResponse) {
    option (audit_log_description).description = "Get enrichments";
  };
  rpc AddEnrichments(AddEnrichmentsRequest) returns (AddEnrichmentsResponse) {
    option (audit_log_description).description = "Add enrichments";
  };
  rpc RemoveEnrichments(RemoveEnrichmentsRequest) returns (RemoveEnrichmentsResponse) {
    option (audit_log_description).description = "Delete enrichments";
  };
  rpc AtomicBatchExecuteEnrichment(AtomicBatchExecuteEnrichmentRequest) returns (AtomicBatchExecuteEnrichmentResponse) {
    option (audit_log_description).description = "Atomic batch execute enrichment";
  };
  rpc GetEnrichmentLimit(GetEnrichmentLimitRequest) returns (GetEnrichmentLimitResponse) {
    option (audit_log_description).description = "Get enrichments limit";
  };
}